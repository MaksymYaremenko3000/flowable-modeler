export default {
  // Labels
  'Activate the global connect tool': 'Activate the global connect tool',
  'Append {type}': 'Append {type}',
  'Add Lane above': 'Add Lane above',
  'Divide into two Lanes': 'Divide into two Lanes',
  'Divide into three Lanes': 'Divide into three Lanes',
  'Add Lane below': 'Add Lane below',
  'Append compensation activity': 'Append compensation activity',
  'Change type': 'Change type',
  'Connect using Association': 'Connect using Association',
  'Connect using Sequence/MessageFlow or Association': 'Connect using Sequence/MessageFlow or Association',
  'Connect using DataInputAssociation': 'Connect using DataInputAssociation',
  'Remove': 'Remove',
  'Activate the hand tool': 'Activate the hand tool',
  'Activate the lasso tool': 'Activate the lasso tool',
  'Activate the create/remove space tool': 'Activate the create/remove space tool',
  'Create expanded SubProcess': 'Create expanded SubProcess',
  'Create IntermediateThrowEvent/BoundaryEvent': 'Create IntermediateThrowEvent/BoundaryEvent',
  'Create Pool/Participant': 'Create Pool/Participant',
  'Parallel Multi Instance': 'Parallel Multi Instance',
  'Sequential Multi Instance': 'Sequential Multi Instance',
  'DataObjectReference': 'Data Object Reference',
  'DataStoreReference': 'Data Store Reference',
  'Loop': 'Loop',
  'Ad-hoc': 'Ad-hoc',
  'Create {type}': 'Create {type}',
  'Task': 'Task',
  'Send Task': 'Send Task',
  'Receive Task': 'Receive Task',
  'User Task': 'User Task',
  'Manual Task': 'Manual Task',
  'Business Rule Task': 'Business Rule Task',
  'Service Task': 'Service Task',
  'Script Task': 'Script Task',
  'Call Activity': 'Call Activity',
  'Sub Process (collapsed)': 'Sub Process (collapsed)',
  'Sub Process (expanded)': 'Sub Process (expanded)',
  'Start Event': 'Start Event',
  'StartEvent': 'Start Event',
  'Intermediate Throw Event': 'Intermediate Throw Event',
  'End Event': 'End Event',
  'EndEvent': 'End Event',
  'Create Gateway': 'Create Gateway',
  'Create Intermediate/Boundary Event': 'Create Intermediate/Boundary Event',
  'Message Start Event': 'Message Start Event',
  'Timer Start Event': 'Timer Start Event',
  'Conditional Start Event': 'Conditional Start Event',
  'Signal Start Event': 'Signal Start Event',
  'Error Start Event': 'Error Start Event',
  'Escalation Start Event': 'Escalation Start Event',
  'Compensation Start Event': 'Compensation Start Event',
  'Message Start Event (non-interrupting)': 'Message Start Event (non-interrupting)',
  'Timer Start Event (non-interrupting)': 'Timer Start Event (non-interrupting)',
  'Conditional Start Event (non-interrupting)': 'Conditional Start Event (non-interrupting)',
  'Signal Start Event (non-interrupting)': 'Signal Start Event (non-interrupting)',
  'Escalation Start Event (non-interrupting)': 'Escalation Start Event (non-interrupting)',
  'Message Intermediate Catch Event': 'Message Intermediate Catch Event',
  'Message Intermediate Throw Event': 'Message Intermediate Throw Event',
  'Timer Intermediate Catch Event': 'Timer Intermediate Catch Event',
  'Escalation Intermediate Throw Event': 'Escalation Intermediate Throw Event',
  'Conditional Intermediate Catch Event': 'Conditional Intermediate Catch Event',
  'Link Intermediate Catch Event': 'Link Intermediate Catch Event',
  'Link Intermediate Throw Event': 'Link Intermediate Throw Event',
  'Compensation Intermediate Throw Event': 'Compensation Intermediate Throw Event',
  'Signal Intermediate Catch Event': 'Signal Intermediate Catch Event',
  'Signal Intermediate Throw Event': 'Signal Intermediate Throw Event',
  'Message End Event': 'Message End Event',
  'Escalation End Event': 'Escalation End Event',
  'Error End Event': 'Error End Event',
  'Cancel End Event': 'Cancel End Event',
  'Compensation End Event': 'Compensation End Event',
  'Signal End Event': 'Signal End Event',
  'Terminate End Event': 'Terminate End Event',
  'Message Boundary Event': 'Message Boundary Event',
  'Message Boundary Event (non-interrupting)': 'Message Boundary Event (non-interrupting)',
  'Timer Boundary Event': 'Timer Boundary Event',
  'Timer Boundary Event (non-interrupting)': 'Timer Boundary Event (non-interrupting)',
  'Escalation Boundary Event': 'Escalation Boundary Event',
  'Escalation Boundary Event (non-interrupting)': 'Escalation Boundary Event (non-interrupting)',
  'Conditional Boundary Event': 'Conditional Boundary Event',
  'Conditional Boundary Event (non-interrupting)': 'Conditional Boundary Event (non-interrupting)',
  'Error Boundary Event': 'Error Boundary Event',
  'Cancel Boundary Event': 'Cancel Boundary Event',
  'Signal Boundary Event': 'Signal Boundary Event',
  'Signal Boundary Event (non-interrupting)': 'Signal Boundary Event (non-interrupting)',
  'Compensation Boundary Event': 'Compensation Boundary Event',
  'Exclusive Gateway': 'Exclusive Gateway',
  'Parallel Gateway': 'Parallel Gateway',
  'Inclusive Gateway': 'Inclusive Gateway',
  'Complex Gateway': 'Complex Gateway',
  'Event based Gateway': 'Event based Gateway',
  'Transaction': 'Transaction',
  'Sub Process': 'Sub Process',
  'Event Sub Process': 'Event Sub Process',
  'Collapsed Pool': 'Collapsed Pool',
  'Expanded Pool': 'Expanded Pool'
}

export const NodeName = {
  'bpmn:Process': 'Process',
  'bpmn:StartEvent': 'Start Event',
  'bpmn:IntermediateThrowEvent': 'Intermediate Event',
  'bpmn:Task': 'Task',
  'bpmn:SendTask': 'Send Task',
  'bpmn:ReceiveTask': 'Receive Task',
  'bpmn:UserTask': 'User Task',
  'bpmn:ManualTask': 'Manual Task',
  'bpmn:BusinessRuleTask': 'Business Rule Task',
  'bpmn:ServiceTask': 'Service Task',
  'bpmn:ScriptTask': 'Script Task',
  'bpmn:EndEvent': 'End Event',
  'bpmn:SequenceFlow': 'Sequence Flow',
  'bpmn:ExclusiveGateway': 'Exclusive Gateway',
  'bpmn:ParallelGateway': 'Parallel Gateway',
  'bpmn:InclusiveGateway': 'Inclusive Gateway',
  'bpmn:ComplexGateway': 'Complex Gateway',
  'bpmn:EventBasedGateway': 'Event Based Gateway'
};
